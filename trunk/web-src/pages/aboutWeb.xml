<?xml version="1.0" encoding="utf-8"?>
<page xmlns="http://lusi.berlios.de/namespaces/page" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="page.xsd">
	<variables>
		<pageId>About web</pageId>
	</variables>
	<page:content xmlns:page="http://lusi.berlios.de/namespaces/page" xmlns="http://www.w3.org/1999/xhtml">
		<h1>About web</h1>
		<ul>
			<li>
				<a href="#overview">Web overview</a>
			</li>
			<li>
				<a href="#xml"><acronym title="Extensible Markup Language">XML</acronym> files</a>
			</li>
			<li>
				<a href="#dtdXsd"><acronym title="Document Type Definition">DTD</acronym> and <acronym title="XML Schema Definition">XSD</acronym> files</a>
			</li>
			<li>
				<a href="#xslt"><acronym title="XML StyleSheet Language for Transformations">XSLT</acronym> files</a>
			</li>
			<li>
				<a href="#script">ECMAScript files</a>
			</li>
			<li>
				<a href="#browsers">Tested browsers</a>
			</li>
			<li>
				<a href="#source">Web source</a>
			</li>
		</ul>
		<div class="h2Rounded">
			<h2>
				<a id="overview" class="anchorLink">Web overview</a>
			</h2>
		</div>
		<p>This webpage was developed as my final project in <a href="http://petra.euitio.uniovi.es/~li/" title="Lenguajes para internet webpage">Lenguajes para internet</a> subject, at <a href="http://www.euitio.uniovi.es/" title="E.U.I.T.I.O. webpage"><acronym title="Escuela Universitaria de Ingeniería Técnica Informática de Oviedo">E.U.I.T.I.O.</acronym></a>. I needed to do the webpage for the project anyway, so I took advantage of it and killed two birds with one stone ;)</p>
		<p>All the pages are <a href="http://www.w3.org/TR/xhtml11/" title="XHTML 1.1 W3C Recommendation"><acronym title="Extensible HyperText Markup Language">XHTML</acronym> 1.1</a>, <a href="http://www.w3.org/TR/CSS21/" title="CSS 2.1 W3C Working Draft"><acronym title="Cascading Style Sheets">CSS</acronym> 2.1</a> and <a href="http://www.w3.org/TR/WAI-WEBCONTENT/" title="Web Content Accessibility Guidelines 1.0">WAI-AAA</a> valid. An <a href="http://tools.ietf.org/html/4287" title="The Atom Syndication Format">Atom</a> valid feed is provided for news.</p>
		<p>Three ECMAScript scripts are used: one to round the corners of specified elements, one to create a screenshots gallery from the screenshots list and one to enable folding an unfolding nested lists.</p>
		<p>All the pages are created from a template using <acronym title="Extensible Markup Language">XML</acronym> and <acronym title="XML StyleSheet Language for Transformations">XSLT</acronym>. Other information (news and screenshots lists) is also stored as <acronym title="Extensible Markup Language">XML</acronym> and transformed through <acronym title="XML StyleSheet Language for Transformations">XSLT</acronym>. <acronym title="Extensible Markup Language">XML</acronym> pages and news list have their own <acronym title="Extensible Markup Language">XML</acronym> Schema to validate against. Screenshots list uses a <acronym title="Document Type Definition">DTD</acronym>.</p>
		<div class="h2Rounded">
			<h2>
				<a id="xml" class="anchorLink"><acronym title="Extensible Markup Language">XML</acronym> files</a>
			</h2>
		</div>
		<p>All the pages are created from <acronym title="Extensible Markup Language">XML</acronym> files containing its contents (not taking into account common fixed content as header or footer which are part of the <acronym title="XML StyleSheet Language for Transformations">XSLT</acronym>). Each <acronym title="Extensible Markup Language">XML</acronym> document under <em>pages</em> is transformed into an <acronym title="Extensible HyperText Markup Language">XHTML</acronym> page using <acronym title="XML StyleSheet Language for Transformations">XSLT</acronym>. These are the available <acronym title="Extensible Markup Language">XML</acronym> source files for the pages: <a href="src/pages/index.xml" title="XML source for index page">pages/index.xml</a>, <a href="src/pages/news.xml" title="XML source for news page">pages/news.xml</a>, <a href="src/pages/screenshots.xml" title="XML source for screenshots page">pages/screenshots.xml</a>, <a href="src/pages/download.xml" title="XML source for download page">pages/download.xml</a>, <a href="src/pages/faq.xml" title="XML source for FAQ page">pages/faq.xml</a>, <a href="src/pages/development.xml" title="XML source for development page">pages/development.xml</a>, <a href="src/pages/about.xml" title="XML source for about page">pages/about.xml</a> and <a href="src/pages/aboutWeb.xml" title="XML source for about web page">pages/aboutWeb.xml</a>.</p>
		<p><a href="src/transformers/menu.xml" title="XML source for menu">transformers/menu.xml</a> contains an <acronym title="Extensible HyperText Markup Language">XHTML</acronym> list with all the pages that are linked through the menu in all pages.</p>
		<p><a href="src/screenshotsList.xml" title="XHTML source for screenshots list">screenshotsList.xml</a> contains an <acronym title="Extensible HyperText Markup Language">XHTML</acronym> list with all the screenshots that are shown in Screenshots section. This list has a fixed structure so it can be used with <a href="src/data/script/galleryGenerator.js" title="Script to generate a screenshots gallery">Gallery Generator script</a>. The list of screenshots in <a href="src/pages/screenshots.xml" title="XML source for screenshots page">pages/screenshots.xml</a> is updated through an <acronym title="XML StyleSheet Language for Transformations">XSLT</acronym> (<a href="src/updateScreenshotsInPage.xsl" title="XSLT to update the screenshots list in a page">updateScreenshotsInPage.xsl</a>) using the <acronym title="Extensible HyperText Markup Language">XHTML</acronym> source for screenshots list.</p>
		<p><a href="src/newsList.xml" title="XML source for news list">newsList.xml</a> contains an <acronym title="Extensible Markup Language">XML</acronym> list with news. The Atom feed is generated using the information stored in this <acronym title="Extensible Markup Language">XML</acronym> file. The list of news in <a href="src/pages/index.xml" title="XML source for index page">pages/index.xml</a> and <a href="src/pages/news.xml" title="XML source for news page">pages/news.xml</a> is updated through an <acronym title="XML StyleSheet Language for Transformations">XSLT</acronym> (<a href="src/updateNewsInPage.xsl" title="XSLT to update the news list in a page">updateNewsInPage.xsl</a>) using the outputted <acronym title="Extensible HyperText Markup Language">XHTML</acronym> file (<a href="src/news-html.xml" title="Outputted file by news-toHTML.xsl">news-html.xml</a>) by <a href="src/news-toHTML.xsl" title="XSLT to create an XHTML document from the news XML source file">news-toHTML.xsl</a> applied to newsList.xml.</p>
		<div class="h2Rounded">
			<h2>
				<a id="dtdXsd" class="anchorLink"><acronym title="Document Type Definition">DTD</acronym> and <acronym title="XML Schema Definition">XSD</acronym> files</a>
			</h2>
		</div>
		<p><a href="src/screenshotsList.xml" title="XHTML list of screenshots">screenshotsList.xml</a> conforms to <a href="src/screenshotsList.dtd" title="DTD for XHTML screenshots list">screenshotsList.dtd</a>. It's an <acronym title="Extensible HyperText Markup Language">XHTML</acronym> document fragment containing some elements in a fixed structure to create the screenshots list.</p>
		<p><a href="src/newsList.xml" title="XML list of news">newsList.xml</a> conforms to <a href="src/newsList.xsd" title="XSD for news list XML">newsList.xsd</a>. This is a list of news. Each new contains a title, a summary which contains only <acronym title="Extensible HyperText Markup Language">XHTML</acronym> block elements and a date in a slightly modified version of the default date and time type data. Target namespace is <em>http://lusi.berlios.de/namespaces/news</em>.</p>
		<p>All the <acronym title="Extensible Markup Language">XML</acronym> files under <em>pages</em> conforms to <a href="src/pages/page.xsd" title="XSD for XML page content">pages/page.xsd</a>. Those <acronym title="Extensible Markup Language">XML</acronym> files contain the data that changes from the template to generate the pages. That is, the true content of the page (not the header, nor the menu, nor the footer, only contents) and also some variables to customize some of the common elements in the templates (for example, the title of the page). Content can be anything suitable in a <em>body</em> <acronym title="Extensible HyperText Markup Language">XHTML</acronym> element, and some variables also use <acronym title="Extensible HyperText Markup Language">XHTML</acronym> elements. Target namespace is <em>http://lusi.berlios.de/namespaces/page</em>.</p>
		<p>Further information about each <acronym title="Extensible Markup Language">XML</acronym> Schema can be found in their annotations.</p>
		<div class="h2Rounded">
			<h2>
				<a id="xslt" class="anchorLink"><acronym title="XML StyleSheet Language for Transformations">XSLT</acronym> files</a>
			</h2>
		</div>
		<p><a href="src/news-toAtom.xsl" title="XSLT to create an Atom feed from the news XML source file">news-toAtom.xsl</a> creates an Atom feed from a news list. Dates in Atom feeds must conform to <a href="http://www.ietf.org/rfc/rfc3339.txt" title="RFC 3339 Date and Time on the Internet specification">RFC 3339</a>, so input dates are modified to conform to this. Links are also modified if needed to adjust them to a full URL if they were relative. Several parameters can be set to customize the transformation.</p>
		<p><a href="src/news-toHTML.xsl" title="XSLT to create an XHTML document from the news XML source file">news-toHTML.xsl</a> creates the <acronym title="Extensible HyperText Markup Language">XHTML</acronym> representation of the News <acronym title="Extensible Markup Language">XML</acronym> source file. Its output is used to update index.xml and news.xml files. Date and time are modified to a friendlier format for the user. The full list of news is generated.</p>
		<p><a href="src/updateScreenshotsInPage.xsl" title="XSLT to update the screenshots list in a page">updateScreenshotsInPage.xsl</a> substitutes the ul element with "screenshotsList" id in the page the <acronym title="XML StyleSheet Language for Transformations">XSLT</acronym> was applied over with the screenshots list. The screenshots list is got from an <acronym title="Extensible HyperText Markup Language">XHTML</acronym> file which conforms to <a href="src/screenshotsList.dtd" title="DTD for XHTML screenshots list">screenshotsList.dtd</a>.</p>
		<p><a href="src/updateNewsInPage.xsl" title="XSLT to update the news list in a page">updateNewsInPage.xsl</a> substitutes the div element with "news" id in the page the <acronym title="XML StyleSheet Language for Transformations">XSLT</acronym> was applied over with the news list and the specified number of news. The news list is got from the <acronym title="Extensible HyperText Markup Language">XHTML</acronym> file outputted when <a href="src/newsList.xml" title="XML source for news list">newsList.xml</a> is transformed using <a href="src/updateNewsInPage.xsl" title="XSLT to update the news list in a page">updateNewsInPage.xsl</a>.</p>
		<p>All the <acronym title="Extensible HyperText Markup Language">XHTML</acronym> pages are created from <acronym title="Extensible Markup Language">XML</acronym> source files. They're transformed using <a href="src/transformers/optimusPrime.xsl" title="Main transformer to create the XHTML pages">transformers/optimusPrime.xsl</a> (named after the <a href="http://en.wikipedia.org/wiki/Optimus_Prime" title="Optimus Prime article in Wikipedia">Autobot leader</a>, one of the most important <a href="http://en.wikipedia.org/wiki/Transformers_%28original_cartoon%29" title="The Transformers original cartoon article in Wikipedia">Transformer</a> :) ). This <acronym title="XML StyleSheet Language for Transformations">XSLT</acronym> copies the contents of the <acronym title="Extensible Markup Language">XML</acronym> source file to the contents part of the <acronym title="Extensible HyperText Markup Language">XHTML</acronym> page, and calls templates provided by other stylesheets to create the head, the header, the menu and the footer of the page. All the pages have the same structure, and some little details can also be customized using special elements in the <acronym title="Extensible Markup Language">XML</acronym> source file. Let see the other <acronym title="XML StyleSheet Language for Transformations">XSLT</acronym> used by optimusPrime.xsl</p>
		<p><a href="src/transformers/head.xsl" title="XSLT to create the head element of the XHTML pages">transformers/head.xsl</a> creates the <em>head</em> element in <acronym title="Extensible HyperText Markup Language">XHTML</acronym> pages. New links and scripts can be added using special elements in the <acronym title="Extensible Markup Language">XML</acronym> source file. Also, ECMAScript code can be added to the window.onload function.</p>
		<p><a href="src/transformers/header.xsl" title="XSLT to create the header of the XHTML pages">transformers/header.xsl</a> creates the header in <acronym title="Extensible HyperText Markup Language">XHTML</acronym> pages. It simply contains the logo of the project.</p>
		<p><a href="src/transformers/footer.xsl" title="XSLT to create the footer of the XHTML pages">transformers/footer.xsl</a> creates the footer in <acronym title="Extensible HyperText Markup Language">XHTML</acronym> pages. It contains all the validation buttons, and also new validation buttons can be added using special elements in the <acronym title="Extensible Markup Language">XML</acronym> source file (like the Atom validation button in news page).</p>
		<p><a href="src/transformers/menu.xsl" title="XSLT to create the menu of the XHTML pages">transformers/menu.xsl</a> creates the menu in <acronym title="Extensible HyperText Markup Language">XHTML</acronym> pages. Menu items are got from <a href="src/transformers/menu.xml" title="XML source for menu">transformers/menu.xml</a>. When the menu for a page that can be accessed from the menu is created, its menu item is made as a paragraph instead of a link.</p>
		<p>Further information about each <acronym title="XML StyleSheet Language for Transformations">XSLT</acronym> can be found in their main and templates documentation.</p>
		<div class="h2Rounded">
			<h2>
				<a id="script" class="anchorLink">ECMAScript files</a>
			</h2>
		</div>
		<p>All the scripts conform (or at least I hope so) to <a href="http://www.ecma-international.org/publications/standards/Ecma-262.htm" title="ECMAScript scripting language specification">ECMAScript Language Specification</a> and the following bindings are needed (not all the bindings are needed by all the scripts): <a href="http://www.w3.org/TR/DOM-Level-2-Core/ecma-script-binding.html" title="ECMAScript binding for the Level 2 Document Object Model Core definitions">Level 2 Document Object Model Core</a>, <a href="http://www.w3.org/TR/DOM-Level-2-Events/ecma-script-binding.html" title="ECMAScript binding for the Level 2 Document Object Model Events definitions">Level 2 Document Object Model Events</a>, <a href="http://www.w3.org/TR/DOM-Level-2-Style/ecma-script-binding.html" title="ECMAScript binding for the Level 2 Document Object Model Style definitions">Level 2 Document Object Model Style</a> and <a href="http://www.w3.org/TR/DOM-Level-2-HTML/ecma-script-binding.html" title="ECMAScript binding for the Level 2 Document Object Model HTML definitions">Level 2 Document Object Model HTML</a>.</p>
		<p>The only known element used which isn't ECMAScript is <em>onresize</em> event handling for the window (used in the gallery generator to resize the screenshots when the window is resized, and also used to load the scripts on window load). As far as I know, it's Javascript, because the <a href="http://www.w3.org/TR/Window/" title="W3C Window Object 1.0 specification">Window Object specification</a> is still a Working draft and doesn't have <a href="http://www.w3.org/TR/Window/#ecmascript-binding" title="ECMAScript binding for Window Object">ECMAScript bindings</a> defined. I haven't found an equivalent way to do it with pure ECMAScript.</p>
		<p>The three scripts are: <a href="src/data/script/roundedCorners.js" title="Script to round corners">script/roundedCorners.js</a>, <a href="src/data/script/galleryGenerator.js" title="Script to generate a screenshots gallery">script/galleryGenerator.js</a> and <a href="src/data/script/foldableList.js" title="Script to make nested lists foldable">script/foldableList.js</a>. Further information about each script can be found in the documentation in their header and functions documentation.</p>
		<p>Those scripts only adds some optional features. Their lack doesn't ruin the use of the website, and, as desirable, it's perfectly usable in not ECMAScript enabled browsers. Each is script is guarded against not conformant browsers using the hasFeature(feature, version) method of the DOMImplementation interface.</p>
		<div class="h2Rounded">
			<h2>
				<a id="browsers" class="anchorLink">Tested browsers</a>
			</h2>
		</div>
		<p>The website was tested successfully in <a href="http://www.mozilla.com/firefox/" title="Official Mozilla Firefox site">Mozilla Firefox</a> 1.0.6, <a href="http://www.konqueror.org/" title="Konqueror Homepage">Konqueror</a> 3.4.2, <a href="http://www.mozilla.org/products/mozilla1.x/" title="Official Mozilla Suite site">Mozilla Suite</a> 1.7.11 and <a href="http://lynx.browser.org/" title="Lynx browser information">Lynx</a> 2.8.5.</p>
		<p>It's expected to fully work in any browser based either in <a href="http://www.mozilla.org/newlayout/" title="Mozilla Layout Engine page">Gecko</a> or <a href="http://khtml.info/" title="KHTML information wiki">KHTML</a> layout engine.</p>
		<p>Lynx is a text browser and has no support for ECMAScript, but all the pages can be viewed without any problem on it.</p>
		<p><a href="http://www.microsoft.com/windows/ie/" title="Internet Explorer Download Page">Internet Explorer</a> doesn't support any of the scripts, but the page can be viewed without problem apart of this and some minor appearance glitches. This is due to the lack of support in Internet Explorer for some ECMAScript bindings.</p>
		<p>It's not a big problem, however, because being the website of a free project for GNU/Linux, hardly any of the visits to the page will be from Internet Explorer users. Most of the potential visitors will use one of the fully supported browsers.</p>
		<div class="h2Rounded">
			<h2>
				<a id="source" class="anchorLink">Web source</a>
			</h2>
		</div>
		<p>All the source files of the web can be downloaded in a <a href="files/webSrc.tar.gz" title="Tar.gz file with all the source files for the website">packed tar.gz file</a>.</p>
		<p>The sources can be built to a real website using the <a href="http://cnswww.cns.cwru.edu/~chet/bash/bashtop.html" title="The GNU Bourne-Again Shell">Bash</a> script <a href="src/cybertron.sh" title="Bash script to build the website">cybertron.sh</a>. It needs the following programs: <a href="http://xmlsoft.org/XSLT/xsltproc2.html" title="xsltproc documentation">xsltproc</a>, <a href="http://xmlsoft.org/xmllint.html" title="xmllint documentation">xmllint</a> (both part of <a href="http://xmlsoft.org/" title="The XML C parser and toolkit of Gnome">libxml project</a>) and, if a different encoding than the default (<acronym title="8-bit Unicode Transformation Format">UTF-8</acronym>) is used, <a href="http://directory.fsf.org/recode.html" title="recode in the FSF software directory">recode</a> and <a href="http://directory.fsf.org/sed.html" title="sed in the FSF software directory">sed</a>.</p>
		<p>Further information about the script can be found in the documentation in its header and functions documentation.</p>
		<p>The script is only a convenience build system. The website can also be built doing manually the steps made by the script:</p>
		<ol>
			<li>
				<p>Prepare pages: <a href="src/pages/index.xml" title="Index XML source page">pages/index.xml</a>, <a href="src/pages/news.xml" title="News XML source page">pages/news.xml</a> and <a href="src/pages/screenshots.xml" title="Screenshots XML source page">pages/screenshots.xml</a> files should be updated with the latest news and screenshots.</p>
				<p>For <a href="src/pages/index.xml" title="Index XML source page">pages/index.xml</a> and <a href="src/pages/news.xml" title="News XML source page">pages/news.xml</a> a temporal file must be created. This file will contain the <acronym title="Extensible HyperText Markup Language">XHTML</acronym> fragment with the news list, and is created using <a href="src/news-toHTML.xsl" title="News.xml to XHTML transformer">news-toHTML.xsl</a> <acronym title="XML StyleSheet Language for Transformations">XSLT</acronym> applied over <a href="src/newsList.xml" title="XML list of news">newsList.xml</a>. <a href="src/pages/index.xml" title="Index XML source page">pages/index.xml</a> and <a href="src/pages/news.xml" title="News XML source page">pages/news.xml</a> are transformed by <a href="src/updateNewsInPage.xsl" title="Updater of the news in a XML page">updateNewsInPage.xsl</a>, which reads the temporal file to get the news.</p>
				<p>In the case of <a href="src/pages/screenshots.xml" title="Screenshots XML source page">pages/screenshots.xml</a>, it is transformed with <a href="src/updateScreenshotsInPage.xsl" title="Updater of the screenshots in a XML page">updateScreenshotsInPage.xsl</a>, which gets the screenshots from <a href="src/screenshotsList.xml" title="XHTML list of screenshots">screenshotsList.xml</a>. There's no need of temporal files, as screenshotsList.xml contains the screenshots list in an <acronym title="Extensible HyperText Markup Language">XHTML</acronym> document fragment.</p>
			</li>
			<li>
				<p>Create pages: all the <acronym title="Extensible Markup Language">XML</acronym> files under pages directory are transformed in the final <acronym title="Extensible HyperText Markup Language">XHTML</acronym> pages using <a href="src/transformers/optimusPrime.xsl" title="Main XSLT">transformers/optimusPrime.xsl</a> <acronym title="XML StyleSheet Language for Transformations">XSLT</acronym>. They are copied to the output directory and reformatted (because even using <em>indent="yes"</em> the <acronym title="Extensible Markup Language">XML</acronym> output may be messed up).</p>
				<p>If they need to be recoded the other encoding than <acronym title="8-bit Unicode Transformation Format">UTF-8</acronym>, also the <em><acronym title="8-bit Unicode Transformation Format">UTF-8</acronym></em> (in lower case!) string  in the <acronym title="Extensible HyperText Markup Language">XHTML</acronym> documents must be substituted with the new encoding.</p>
			</li>
			<li>Create feeds: copy the output file of applying <a href="src/news-toAtom.xsl" title="XSLT to create an Atom feed from the news XML source file">news-toAtom.xsl</a> on <a href="src/newsList.xml" title="XML source for news list">newsList.xml</a> to <em>feed/atom/news.xml</em> in the output directory.</li>
			<li>Copy data dirs: copy all the contents of the <em>data</em> directory to the output directory.</li>
			<li>Copy source dir: copy all the contents of the <em>src</em> directory to the <em>src</em> subdirectory of the output directory.</li>
		</ol>
		<p class="lastUpdated">Last updated: 2006-06-28</p>
	</page:content>
</page>
